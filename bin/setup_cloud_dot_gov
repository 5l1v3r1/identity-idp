#!/usr/bin/env ruby
require 'pathname'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)

def run(command)
  abort "command failed (#{$CHILD_STATUS}): #{command}" unless system command
end

Dir.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  Kernel.puts %q[
   _             _
  | |           (_)
  | | ___   __ _ _ _ __    __ _  _____   __
  | |/ _ \ / _` | | '_ \  / _` |/ _ \ \ / /
  | | (_) | (_| | | | | || (_| | (_) \ V /
  |_|\___/ \__, |_|_| |_(_)__, |\___/ \_/
            __/ |          __/ |
           |___/          |___/

                            in the cloud.gov!
  ]

  Kernel.puts "\n== Moving Procfile =="
  run 'rm Procfile'
  run 'mv Procfile.cloud_dot_gov Procfile'

  Kernel.puts "\n== Copying sample certs and keys =="
  run 'cp keys/saml.key.enc.example keys/saml.key.enc'
  run 'cp keys/equifax_rsa.example keys/equifax_rsa'
  run 'cp keys/equifax_rsa.pub.example keys/equifax_rsa.pub'
  run 'cp certs/saml.crt.example certs/saml.crt'

  # TODO: find a way to enable.
  #.      the gpg key import is disabled because it will only be
  #       used when we integrate with Equifax. this step can also take a
  #       while, which may exceed the default 60-second CloudFoundry timeout
  Kernel.puts "\n== GPG Setup =="
  run "which gpg || brew install gpg"
  run "gpg --dearmor < keys/equifax_gpg.pub.example > keys/equifax_gpg.pub.bin"
  system "gpg --batch --import keys/equifax_gpg.example"

  Kernel.puts "\n== Preparing database =="
  run 'bin/rake db:migrate --trace'
  run 'bin/rake db:seed --trace'
end
